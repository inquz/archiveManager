/**
 * @file archive.h
 * @brief Работа с архивом жильцов
 *
 * Заголовочный файл содержит функции для загрузки, сохранения, отображения
 * и управления архивом жильцов, организованным в виде стека.
 */

#pragma once
#include "base.h"

 /**
  * @brief Загружает данные из файла формата input.txt
  *
  * Читает данные из текстового файла в формате input.txt и помещает их в стек.
  * Формат файла должен содержать полные данные о жильцах.
  *
  * @param stack Указатель на стек для заполнения
  * @param filename Имя файла для чтения (input.txt)
  *
  * @note Формат файла input.txt:
  * Номер_карты Адрес ФИО Кол-во_жильцов Дата_заселения Общая_площадь Избыточная_площадь
  */
void loadDataFromInput(Stack* stack, const char* filename);

/**
 * @brief Загружает данные из файла формата kodif.txt
 *
 * Читает данные из текстового файла в формате kodif.txt и помещает их в стек.
 * Формат файла содержит ограниченный набор данных о жильцах.
 *
 * @param stack Указатель на стек для заполнения
 * @param filename Имя файла для чтения (kodif.txt)
 *
 * @note Формат файла kodif.txt:
 * Номер_карты Адрес ФИО Кол-во_жильцов
 */
void loadDataFromKodif(Stack* stack, const char* filename);

/**
 * @brief Сохраняет данные стека в бинарный файл
 *
 * Записывает все данные из стека в бинарный файл для последующего восстановления.
 *
 * @param stack Указатель на стек с данными
 * @param filename Имя бинарного файла для сохранения
 */
void saveToArchive(Stack* stack, const char* filename);

/**
 * @brief Выводит архив в формате input.txt
 *
 * Отображает содержимое стека в табличном виде, соответствующем формату input.txt,
 * со всеми полями структуры Tenant.
 *
 * @param stack Указатель на стек для отображения
 */
void printArchiveInput(const Stack* stack);

/**
 * @brief Выводит архив в формате kodif.txt
 *
 * Отображает содержимое стека в табличном виде, соответствующем формату kodif.txt,
 * только с основными полями информации о жильцах.
 *
 * @param stack Указатель на стек для отображения
 */
void printArchiveKodif(const Stack* stack);

/**
 * @brief Очищает архив
 *
 * Удаляет все элементы из стека и освобождает занимаемую память.
 * После выполнения стек остается пустым и готовым к повторному использованию.
 *
 * @param stack Указатель на стек для очистки
 */
void clearArchive(Stack* stack);

/**
 * @brief Загружает архив из бинарного файла
 *
 * Восстанавливает стек из ранее сохраненного бинарного файла.
 *
 * @param stack Указатель на стек для заполнения
 * @param filename Имя бинарного файла для загрузки
 */
void loadArchiveFromBin(Stack* stack, const char* filename);

/**
 * @brief Сортирует данные Школьным Методом
 *
 * Сортирует данные в файле Школьным Методом по кол-ву жильцов.
 *
 * @param filename Имя файла для сортировки
 */
void shellSort(const char* filename);