/**
 * @file analysis.h
 * @brief Функции анализа данных жильцов
 *
 * Данный заголовочный файл содержит функции для анализа и вывода информации
 * о жильцах на основе данных из стека.
 */

#pragma once
#include "base.h"

 /**
  * @brief Выводит список жильцов с избыточной площадью
  *
  * Функция проходит по всем элементам стека и выводит информацию о жильцах,
  * у которых значение excessArea больше 0.
  *
  * @param stack Указатель на стек с данными жильцов
  */
void printTenantsWithExcessArea(const Stack* stack);

/**
 * @brief Функция сравнения для сортировки по площади на человека
 *
 * Используется как callback-функция для qsort(). Сравнивает два элемента Tenant
 * по значению площади на одного проживающего (totalArea / residentCount).
 *
 * @param a Указатель на первый элемент для сравнения
 * @param b Указатель на второй элемент для сравнения
 * @return Отрицательное число, если a < b
 *         Положительное число, если a > b
 *         Ноль, если a == b
 */
int compareAreaPerPerson(const void* a, const void* b);

/**
 * @brief Выводит топ-3 жильцов с минимальной площадью на человека
 *
 * Функция создает временный массив из элементов стека, сортирует его по
 * возрастанию площади на одного проживающего (totalArea / residentCount)
 * и выводит информацию о первых трех жильцах из отсортированного массива.
 *
 * @param stack Указатель на стек с данными жильцов
 */
void printTopThreeMinimalAreaPerPerson(const Stack* stack);